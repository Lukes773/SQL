CREATE TABLE fortune_companies (
    company_id INTEGER PRIMARY KEY,
    company_name TEXT,
    industry TEXT,
    revenue REAL,
    employees INTEGER,
    healthcare_benefits BIT,
    paid_time_off_days INTEGER,
    maternity_leave_weeks INTEGER,
    avg_employee_tenure REAL
);

INSERT INTO fortune_companies (company_name, industry, revenue, employees, healthcare_benefits, paid_time_off_days, maternity_leave_weeks, avg_employee_tenure)
VALUES
    ('Apple Inc.', 'Technology', 365.7, 147000, 1, 20, 12, 4.5),
    ('Walmart Inc.', 'Retail', 523.96, 2200000, 1, 15, 8, 6.2),
    ('Exxon Mobil Corporation', 'Energy', 265.01, 72000, 0, 18, 6, 7.8),
    ('Amazon.com Inc.', 'Technology', 386.06, 1370000, 1, 22, 14, 5.1),
    ('JPMorgan Chase & Co.', 'Financials', 160.1, 255998, 1, 21, 12, 6.9),
    ('Verizon Communications Inc.', 'Telecommunications', 131.88, 132600, 0, 15, 6, 5.5),
    ('Company A', 'Retail', 235.4, 2000, 1, 18, 10, 5.8),
    ('Company B', 'Healthcare', 400.7, 2300, 1, 22, 13, 5.7),
    ('Company C', 'Manufacturing', 300.2, 2000, 1, 18, 10, 5.8),
    ('Company D', 'Healthcare', 150.5, 3500, 1, 20, 12, 6.5),
    ('Company E', 'Finance', 280.7, 1800, 0, 14, 8, 4.2),
    ('Company F', 'Technology', 420.1, 2500, 1, 22, 14, 7.1),
    ('Company G', 'Retail', 190.8, 1500, 1, 16, 9, 5.3),
    ('Company H', 'Energy', 280.5, 2200, 0, 15, 8, 6.8),
    ('Company I', 'Telecommunications', 110.3, 1800, 1, 19, 11, 4.9),
    ('Company J', 'Manufacturing', 390.6, 2700, 1, 21, 13, 6.2),
    ('Company K', 'Healthcare', 180.2, 3200, 1, 17, 9, 7.4),
    ('Company L', 'Finance', 230.4, 1900, 0, 13, 7, 5.6),
    ('Company M', 'Technology', 340.9, 2800, 1, 23, 15, 6.9),
    ('Company N', 'Retail', 200.6, 1600, 1, 15, 8, 4.7),
    ('Company O', 'Energy', 260.2, 2400, 0, 14, 7, 6.1),
    ('Company P', 'Telecommunications', 130.5, 2100, 1, 20, 12, 5.3),
    ('Company Q', 'Manufacturing', 360.0, 2900, 1, 22, 14, 7.8),
    ('Company R', 'Technology', 400.7, 2300, 1, 22, 13, 5.7),
    ('Company S', 'Retail', 210.8, 1600, 0, 16, 9, 4.9),
    ('Company T', 'Energy', 290.5, 2200, 1, 15, 8, 7.2),
    ('Company U', 'Telecommunications', 140.3, 1900, 1, 20, 12, 6.1),
    ('Company V', 'Manufacturing', 350.6, 2800, 1, 22, 14, 5.4),
    ('Company W', 'Healthcare', 160.2, 3300, 0, 18, 10, 4.8),
    ('Company X', 'Finance', 240.4, 2000, 1, 13, 7, 7.1),
    ('Company Y', 'Technology', 320.9, 2700, 1, 23, 15, 5.6),
    ('Company Z', 'Retail', 180.6, 1400, 0, 14, 8, 6.3),
    ('Company AA', 'Energy', 240.2, 2600, 1, 17, 9, 6.5),
    ('Company BB', 'Telecommunications', 120.5, 2100, 0, 19, 11, 4.5),
    ('Company CC', 'Manufacturing', 380.0, 3000, 1, 21, 13, 7.3),
    ('Company DD', 'Healthcare', 170.2, 3200, 1, 17, 9, 5.8),
    ('Company EE', 'Finance', 250.4, 1900, 0, 12, 6, 6.4),
    ('Company FF', 'Technology', 300.9, 2500, 1, 24, 16, 6.9),
    ('Company GG', 'Retail', 190.6, 1700, 0, 13, 7, 5.2),
    ('Company HH', 'Energy', 280.2, 2300, 1, 16, 9, 6.8),
    ('Company II', 'Telecommunications', 110.5, 2000, 1, 21, 12, 4.9),
    ('Company JJ', 'Manufacturing', 370.0, 3100, 1, 20, 12, 7.6),
    ('Company KK', 'Healthcare', 150.2, 3400, 0, 16, 8, 5.3);



-- Query to see what companies in the tech and finance sectors have unusually bad health benefits
SELECT company_name, industry, healthcare_benefits, maternity_leave_weeks
FROM fortune_companies
Where industry in ('Technology', 'Financials', 'Finance') AND (maternity_leave_weeks <=10 or healthcare_benefits = 0)
;



--Query to compare company sizes to the average and categorize them by size. It uses a CTE to allow the query to compare the company data from the table with the average size
WITH average_size AS (
    SELECT AVG(employees) AS average_size
    FROM fortune_companies
)

SELECT company_name, employees,
CASE WHEN employees >= 1.5 * average_size THEN 'Large Company'
WHEN  employees >= 0.5*average_size THEN 'Medium Company'
ELSE 'Small Company'
END AS company_size
FROM fortune_companies, average_size
limit 12;

--Shows only the industries where the average revenue of that industry is above 245
SELECT AVG(revenue) AS avg_revenue_industry, industry
FROM fortune_companies
GROUP BY industry
HAVING avg_revenue_industry > 245
ORDER BY avg_revenue_industry desc;


--Uses a CTE to find the max and min revenue in the table, and then querys the table to find the two companies matching those revenue stats. Uses union to combine the queries.
WITH stats AS (
    SELECT max(revenue) AS max, min(revenue) AS min
    FROM fortune_companies
)

SELECT company_name,"Best revenue" AS notable_statistic
FROM fortune_companies, stats
WHERE revenue = max
UNION
SELECT company_name, "Worst revenue"
FROM fortune_companies, stats
WHERE revenue = min;



--Query that uses a few metrics to find what companies are better to work, and ranks them with a point system, showing only companies that scored 3 out of 3.
WITH quality AS(
  SELECT AVG(paid_time_off_days) AS off, 
         AVG(maternity_leave_weeks) AS mater, 
         AVG(avg_employee_tenure) AS ten
  FROM fortune_companies) 
  
SELECT company_name AS Best_companies, 
       (CASE WHEN paid_time_off_days > off THEN 1
             WHEN paid_time_off_days < off THEN -1
             ELSE 0 END) +
       (CASE WHEN maternity_leave_weeks > mater THEN 1
             WHEN maternity_leave_weeks < mater THEN -1
             ELSE 0 END) +
       (CASE WHEN avg_employee_tenure > ten THEN 1
             WHEN avg_employee_tenure < ten THEN -1
             ELSE 0 END) AS quality_of_benefits
FROM fortune_companies, quality
ORDER BY quality_of_benefits desc
limit 10;
